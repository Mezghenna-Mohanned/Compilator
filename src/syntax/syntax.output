Grammar

    0 $accept: program $end

    1 program: MAINPRGM IDF ';' VAR declarations BEGINPG block ENDPG ';'

    2 declarations: declarations declaration
    3             | ε

    4 declaration: LET var_list ':' type ';'
    5            | LET var_list2 ':' type ';'
    6            | DEFINE CONSTTK const_declaration ';'

    7 var_list: var_list ',' IDF
    8         | IDF

    9 var_list2: var_list2 ',' IDF '[' INTCST ']'
   10          | IDF '[' INTCST ']'

   11 const_declaration: IDF ':' type '=' constant_value
   12                  | IDF ':' type

   13 type: INT_TYPE
   14     | FLOAT_TYPE

   15 block: '{' statements '}'

   16 statements: statements statement
   17           | ε

   18 statement: assignment ';'
   19          | conditional
   20          | loop
   21          | iostatement ';'
   22          | forstatement

   23 assignment: IDF ASSIGN expression
   24           | IDF '[' INTCST ']' ASSIGN expression
   25           | IDF '[' IDF ']' ASSIGN expression

   26 expression: expression '+' expression
   27           | expression '-' expression
   28           | expression '*' expression
   29           | expression '/' expression
   30           | '(' expression ')'
   31           | constant_value
   32           | IDF

   33 constant_value: INTCST
   34               | FLOATCST

   35 conditional: IF '(' condition ')' THEN block ELSE block
   36            | IF '(' condition ')' THEN block

   37 loop: DO block WHILE '(' condition ')' ';'

   38 forstatement: FOR IDF FROM expression TO expression STEP expression block

   39 condition: condition_or

   40 condition_or: condition_or OR condition_and
   41             | condition_and

   42 condition_and: condition_and AND condition_not
   43              | condition_not

   44 condition_not: NOT condition_not
   45              | condition_comp

   46 condition_comp: expression '<' expression
   47               | expression '>' expression
   48               | expression LE expression
   49               | expression GE expression
   50               | expression EQ expression
   51               | expression NEQ expression
   52               | '(' condition ')'

   53 iostatement: INPUT '(' ioparam ')'
   54            | OUTPUT '(' ioparam ')'

   55 ioparam: IDF
   56        | IDF '[' INTCST ']'
   57        | IDF '[' IDF ']'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 30 35 36 37 52 53 54
    ')' (41) 30 35 36 37 52 53 54
    '*' (42) 28
    '+' (43) 26
    ',' (44) 7 9
    '-' (45) 27
    '/' (47) 29
    ':' (58) 4 5 11 12
    ';' (59) 1 4 5 6 18 21 37
    '<' (60) 46
    '=' (61) 11
    '>' (62) 47
    '[' (91) 9 10 24 25 56 57
    ']' (93) 9 10 24 25 56 57
    '{' (123) 15
    '}' (125) 15
    error (256)
    MAINPRGM (258) 1
    VAR (259) 1
    BEGINPG (260) 1
    ENDPG (261) 1
    LET (262) 4 5
    DEFINE (263) 6
    CONSTTK (264) 6
    IF (265) 35 36
    THEN (266) 35 36
    ELSE (267) 35
    DO (268) 37
    WHILE (269) 37
    FOR (270) 38
    FROM (271) 38
    TO (272) 38
    STEP (273) 38
    INPUT (274) 53
    OUTPUT (275) 54
    INTCST <entier> (276) 9 10 24 33 56
    FLOATCST <reel> (277) 34
    IDF <str> (278) 1 7 8 9 10 11 12 23 24 25 32 38 55 56 57
    INT_TYPE (279) 13
    FLOAT_TYPE (280) 14
    ASSIGN (281) 23 24 25
    LE (282) 48
    GE (283) 49
    EQ (284) 50
    NEQ (285) 51
    AND (286) 42
    OR (287) 40
    NOT (288) 44


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program (51)
        on left: 1
        on right: 0
    declarations (52)
        on left: 2 3
        on right: 1 2
    declaration (53)
        on left: 4 5 6
        on right: 2
    var_list <symbole> (54)
        on left: 7 8
        on right: 4 7
    var_list2 <symbol> (55)
        on left: 9 10
        on right: 5 9
    const_declaration <symbole> (56)
        on left: 11 12
        on right: 6
    type <str> (57)
        on left: 13 14
        on right: 4 5 11 12
    block (58)
        on left: 15
        on right: 1 35 36 37 38
    statements (59)
        on left: 16 17
        on right: 15 16
    statement (60)
        on left: 18 19 20 21 22
        on right: 16
    assignment (61)
        on left: 23 24 25
        on right: 18
    expression <con> (62)
        on left: 26 27 28 29 30 31 32
        on right: 23 24 25 26 27 28 29 30 38 46 47 48 49 50 51
    constant_value <con> (63)
        on left: 33 34
        on right: 11 31
    conditional (64)
        on left: 35 36
        on right: 19
    loop (65)
        on left: 37
        on right: 20
    forstatement (66)
        on left: 38
        on right: 22
    condition (67)
        on left: 39
        on right: 35 36 37 52
    condition_or (68)
        on left: 40 41
        on right: 39 40
    condition_and (69)
        on left: 42 43
        on right: 40 41 42
    condition_not (70)
        on left: 44 45
        on right: 42 43 44
    condition_comp (71)
        on left: 46 47 48 49 50 51 52
        on right: 45
    iostatement (72)
        on left: 53 54
        on right: 21
    ioparam (73)
        on left: 55 56 57
        on right: 53 54


State 0

    0 $accept: • program $end

    MAINPRGM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: MAINPRGM • IDF ';' VAR declarations BEGINPG block ENDPG ';'

    IDF  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: MAINPRGM IDF • ';' VAR declarations BEGINPG block ENDPG ';'

    ';'  shift, and go to state 5


State 4

    0 $accept: program $end •

    $default  accept


State 5

    1 program: MAINPRGM IDF ';' • VAR declarations BEGINPG block ENDPG ';'

    VAR  shift, and go to state 6


State 6

    1 program: MAINPRGM IDF ';' VAR • declarations BEGINPG block ENDPG ';'

    $default  reduce using rule 3 (declarations)

    declarations  go to state 7


State 7

    1 program: MAINPRGM IDF ';' VAR declarations • BEGINPG block ENDPG ';'
    2 declarations: declarations • declaration

    BEGINPG  shift, and go to state 8
    LET      shift, and go to state 9
    DEFINE   shift, and go to state 10

    declaration  go to state 11


State 8

    1 program: MAINPRGM IDF ';' VAR declarations BEGINPG • block ENDPG ';'

    '{'  shift, and go to state 12

    block  go to state 13


State 9

    4 declaration: LET • var_list ':' type ';'
    5            | LET • var_list2 ':' type ';'

    IDF  shift, and go to state 14

    var_list   go to state 15
    var_list2  go to state 16


State 10

    6 declaration: DEFINE • CONSTTK const_declaration ';'

    CONSTTK  shift, and go to state 17


State 11

    2 declarations: declarations declaration •

    $default  reduce using rule 2 (declarations)


State 12

   15 block: '{' • statements '}'

    $default  reduce using rule 17 (statements)

    statements  go to state 18


State 13

    1 program: MAINPRGM IDF ';' VAR declarations BEGINPG block • ENDPG ';'

    ENDPG  shift, and go to state 19


State 14

    8 var_list: IDF •
   10 var_list2: IDF • '[' INTCST ']'

    '['  shift, and go to state 20

    $default  reduce using rule 8 (var_list)


State 15

    4 declaration: LET var_list • ':' type ';'
    7 var_list: var_list • ',' IDF

    ':'  shift, and go to state 21
    ','  shift, and go to state 22


State 16

    5 declaration: LET var_list2 • ':' type ';'
    9 var_list2: var_list2 • ',' IDF '[' INTCST ']'

    ':'  shift, and go to state 23
    ','  shift, and go to state 24


State 17

    6 declaration: DEFINE CONSTTK • const_declaration ';'

    IDF  shift, and go to state 25

    const_declaration  go to state 26


State 18

   15 block: '{' statements • '}'
   16 statements: statements • statement

    IF      shift, and go to state 27
    DO      shift, and go to state 28
    FOR     shift, and go to state 29
    INPUT   shift, and go to state 30
    OUTPUT  shift, and go to state 31
    IDF     shift, and go to state 32
    '}'     shift, and go to state 33

    statement     go to state 34
    assignment    go to state 35
    conditional   go to state 36
    loop          go to state 37
    forstatement  go to state 38
    iostatement   go to state 39


State 19

    1 program: MAINPRGM IDF ';' VAR declarations BEGINPG block ENDPG • ';'

    ';'  shift, and go to state 40


State 20

   10 var_list2: IDF '[' • INTCST ']'

    INTCST  shift, and go to state 41


State 21

    4 declaration: LET var_list ':' • type ';'

    INT_TYPE    shift, and go to state 42
    FLOAT_TYPE  shift, and go to state 43

    type  go to state 44


State 22

    7 var_list: var_list ',' • IDF

    IDF  shift, and go to state 45


State 23

    5 declaration: LET var_list2 ':' • type ';'

    INT_TYPE    shift, and go to state 42
    FLOAT_TYPE  shift, and go to state 43

    type  go to state 46


State 24

    9 var_list2: var_list2 ',' • IDF '[' INTCST ']'

    IDF  shift, and go to state 47


State 25

   11 const_declaration: IDF • ':' type '=' constant_value
   12                  | IDF • ':' type

    ':'  shift, and go to state 48


State 26

    6 declaration: DEFINE CONSTTK const_declaration • ';'

    ';'  shift, and go to state 49


State 27

   35 conditional: IF • '(' condition ')' THEN block ELSE block
   36            | IF • '(' condition ')' THEN block

    '('  shift, and go to state 50


State 28

   37 loop: DO • block WHILE '(' condition ')' ';'

    '{'  shift, and go to state 12

    block  go to state 51


State 29

   38 forstatement: FOR • IDF FROM expression TO expression STEP expression block

    IDF  shift, and go to state 52


State 30

   53 iostatement: INPUT • '(' ioparam ')'

    '('  shift, and go to state 53


State 31

   54 iostatement: OUTPUT • '(' ioparam ')'

    '('  shift, and go to state 54


State 32

   23 assignment: IDF • ASSIGN expression
   24           | IDF • '[' INTCST ']' ASSIGN expression
   25           | IDF • '[' IDF ']' ASSIGN expression

    ASSIGN  shift, and go to state 55
    '['     shift, and go to state 56


State 33

   15 block: '{' statements '}' •

    $default  reduce using rule 15 (block)


State 34

   16 statements: statements statement •

    $default  reduce using rule 16 (statements)


State 35

   18 statement: assignment • ';'

    ';'  shift, and go to state 57


State 36

   19 statement: conditional •

    $default  reduce using rule 19 (statement)


State 37

   20 statement: loop •

    $default  reduce using rule 20 (statement)


State 38

   22 statement: forstatement •

    $default  reduce using rule 22 (statement)


State 39

   21 statement: iostatement • ';'

    ';'  shift, and go to state 58


State 40

    1 program: MAINPRGM IDF ';' VAR declarations BEGINPG block ENDPG ';' •

    $default  reduce using rule 1 (program)


State 41

   10 var_list2: IDF '[' INTCST • ']'

    ']'  shift, and go to state 59


State 42

   13 type: INT_TYPE •

    $default  reduce using rule 13 (type)


State 43

   14 type: FLOAT_TYPE •

    $default  reduce using rule 14 (type)


State 44

    4 declaration: LET var_list ':' type • ';'

    ';'  shift, and go to state 60


State 45

    7 var_list: var_list ',' IDF •

    $default  reduce using rule 7 (var_list)


State 46

    5 declaration: LET var_list2 ':' type • ';'

    ';'  shift, and go to state 61


State 47

    9 var_list2: var_list2 ',' IDF • '[' INTCST ']'

    '['  shift, and go to state 62


State 48

   11 const_declaration: IDF ':' • type '=' constant_value
   12                  | IDF ':' • type

    INT_TYPE    shift, and go to state 42
    FLOAT_TYPE  shift, and go to state 43

    type  go to state 63


State 49

    6 declaration: DEFINE CONSTTK const_declaration ';' •

    $default  reduce using rule 6 (declaration)


State 50

   35 conditional: IF '(' • condition ')' THEN block ELSE block
   36            | IF '(' • condition ')' THEN block

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    NOT       shift, and go to state 67
    '('       shift, and go to state 68

    expression      go to state 69
    constant_value  go to state 70
    condition       go to state 71
    condition_or    go to state 72
    condition_and   go to state 73
    condition_not   go to state 74
    condition_comp  go to state 75


State 51

   37 loop: DO block • WHILE '(' condition ')' ';'

    WHILE  shift, and go to state 76


State 52

   38 forstatement: FOR IDF • FROM expression TO expression STEP expression block

    FROM  shift, and go to state 77


State 53

   53 iostatement: INPUT '(' • ioparam ')'

    IDF  shift, and go to state 78

    ioparam  go to state 79


State 54

   54 iostatement: OUTPUT '(' • ioparam ')'

    IDF  shift, and go to state 78

    ioparam  go to state 80


State 55

   23 assignment: IDF ASSIGN • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 82
    constant_value  go to state 70


State 56

   24 assignment: IDF '[' • INTCST ']' ASSIGN expression
   25           | IDF '[' • IDF ']' ASSIGN expression

    INTCST  shift, and go to state 83
    IDF     shift, and go to state 84


State 57

   18 statement: assignment ';' •

    $default  reduce using rule 18 (statement)


State 58

   21 statement: iostatement ';' •

    $default  reduce using rule 21 (statement)


State 59

   10 var_list2: IDF '[' INTCST ']' •

    $default  reduce using rule 10 (var_list2)


State 60

    4 declaration: LET var_list ':' type ';' •

    $default  reduce using rule 4 (declaration)


State 61

    5 declaration: LET var_list2 ':' type ';' •

    $default  reduce using rule 5 (declaration)


State 62

    9 var_list2: var_list2 ',' IDF '[' • INTCST ']'

    INTCST  shift, and go to state 85


State 63

   11 const_declaration: IDF ':' type • '=' constant_value
   12                  | IDF ':' type •

    '='  shift, and go to state 86

    $default  reduce using rule 12 (const_declaration)


State 64

   33 constant_value: INTCST •

    $default  reduce using rule 33 (constant_value)


State 65

   34 constant_value: FLOATCST •

    $default  reduce using rule 34 (constant_value)


State 66

   32 expression: IDF •

    $default  reduce using rule 32 (expression)


State 67

   44 condition_not: NOT • condition_not

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    NOT       shift, and go to state 67
    '('       shift, and go to state 68

    expression      go to state 69
    constant_value  go to state 70
    condition_not   go to state 87
    condition_comp  go to state 75


State 68

   30 expression: '(' • expression ')'
   52 condition_comp: '(' • condition ')'

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    NOT       shift, and go to state 67
    '('       shift, and go to state 68

    expression      go to state 88
    constant_value  go to state 70
    condition       go to state 89
    condition_or    go to state 72
    condition_and   go to state 73
    condition_not   go to state 74
    condition_comp  go to state 75


State 69

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   46 condition_comp: expression • '<' expression
   47               | expression • '>' expression
   48               | expression • LE expression
   49               | expression • GE expression
   50               | expression • EQ expression
   51               | expression • NEQ expression

    LE   shift, and go to state 90
    GE   shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93
    '<'  shift, and go to state 94
    '>'  shift, and go to state 95
    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99


State 70

   31 expression: constant_value •

    $default  reduce using rule 31 (expression)


State 71

   35 conditional: IF '(' condition • ')' THEN block ELSE block
   36            | IF '(' condition • ')' THEN block

    ')'  shift, and go to state 100


State 72

   39 condition: condition_or •
   40 condition_or: condition_or • OR condition_and

    OR  shift, and go to state 101

    $default  reduce using rule 39 (condition)


State 73

   41 condition_or: condition_and •
   42 condition_and: condition_and • AND condition_not

    AND  shift, and go to state 102

    $default  reduce using rule 41 (condition_or)


State 74

   43 condition_and: condition_not •

    $default  reduce using rule 43 (condition_and)


State 75

   45 condition_not: condition_comp •

    $default  reduce using rule 45 (condition_not)


State 76

   37 loop: DO block WHILE • '(' condition ')' ';'

    '('  shift, and go to state 103


State 77

   38 forstatement: FOR IDF FROM • expression TO expression STEP expression block

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 104
    constant_value  go to state 70


State 78

   55 ioparam: IDF •
   56        | IDF • '[' INTCST ']'
   57        | IDF • '[' IDF ']'

    '['  shift, and go to state 105

    $default  reduce using rule 55 (ioparam)


State 79

   53 iostatement: INPUT '(' ioparam • ')'

    ')'  shift, and go to state 106


State 80

   54 iostatement: OUTPUT '(' ioparam • ')'

    ')'  shift, and go to state 107


State 81

   30 expression: '(' • expression ')'

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 108
    constant_value  go to state 70


State 82

   23 assignment: IDF ASSIGN expression •
   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99

    $default  reduce using rule 23 (assignment)


State 83

   24 assignment: IDF '[' INTCST • ']' ASSIGN expression

    ']'  shift, and go to state 109


State 84

   25 assignment: IDF '[' IDF • ']' ASSIGN expression

    ']'  shift, and go to state 110


State 85

    9 var_list2: var_list2 ',' IDF '[' INTCST • ']'

    ']'  shift, and go to state 111


State 86

   11 const_declaration: IDF ':' type '=' • constant_value

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65

    constant_value  go to state 112


State 87

   44 condition_not: NOT condition_not •

    $default  reduce using rule 44 (condition_not)


State 88

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   30           | '(' expression • ')'
   46 condition_comp: expression • '<' expression
   47               | expression • '>' expression
   48               | expression • LE expression
   49               | expression • GE expression
   50               | expression • EQ expression
   51               | expression • NEQ expression

    LE   shift, and go to state 90
    GE   shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93
    '<'  shift, and go to state 94
    '>'  shift, and go to state 95
    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    ')'  shift, and go to state 113


State 89

   52 condition_comp: '(' condition • ')'

    ')'  shift, and go to state 114


State 90

   48 condition_comp: expression LE • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 115
    constant_value  go to state 70


State 91

   49 condition_comp: expression GE • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 116
    constant_value  go to state 70


State 92

   50 condition_comp: expression EQ • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 117
    constant_value  go to state 70


State 93

   51 condition_comp: expression NEQ • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 118
    constant_value  go to state 70


State 94

   46 condition_comp: expression '<' • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 119
    constant_value  go to state 70


State 95

   47 condition_comp: expression '>' • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 120
    constant_value  go to state 70


State 96

   26 expression: expression '+' • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 121
    constant_value  go to state 70


State 97

   27 expression: expression '-' • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 122
    constant_value  go to state 70


State 98

   28 expression: expression '*' • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 123
    constant_value  go to state 70


State 99

   29 expression: expression '/' • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 124
    constant_value  go to state 70


State 100

   35 conditional: IF '(' condition ')' • THEN block ELSE block
   36            | IF '(' condition ')' • THEN block

    THEN  shift, and go to state 125


State 101

   40 condition_or: condition_or OR • condition_and

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    NOT       shift, and go to state 67
    '('       shift, and go to state 68

    expression      go to state 69
    constant_value  go to state 70
    condition_and   go to state 126
    condition_not   go to state 74
    condition_comp  go to state 75


State 102

   42 condition_and: condition_and AND • condition_not

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    NOT       shift, and go to state 67
    '('       shift, and go to state 68

    expression      go to state 69
    constant_value  go to state 70
    condition_not   go to state 127
    condition_comp  go to state 75


State 103

   37 loop: DO block WHILE '(' • condition ')' ';'

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    NOT       shift, and go to state 67
    '('       shift, and go to state 68

    expression      go to state 69
    constant_value  go to state 70
    condition       go to state 128
    condition_or    go to state 72
    condition_and   go to state 73
    condition_not   go to state 74
    condition_comp  go to state 75


State 104

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   38 forstatement: FOR IDF FROM expression • TO expression STEP expression block

    TO   shift, and go to state 129
    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99


State 105

   56 ioparam: IDF '[' • INTCST ']'
   57        | IDF '[' • IDF ']'

    INTCST  shift, and go to state 130
    IDF     shift, and go to state 131


State 106

   53 iostatement: INPUT '(' ioparam ')' •

    $default  reduce using rule 53 (iostatement)


State 107

   54 iostatement: OUTPUT '(' ioparam ')' •

    $default  reduce using rule 54 (iostatement)


State 108

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   30           | '(' expression • ')'

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    ')'  shift, and go to state 113


State 109

   24 assignment: IDF '[' INTCST ']' • ASSIGN expression

    ASSIGN  shift, and go to state 132


State 110

   25 assignment: IDF '[' IDF ']' • ASSIGN expression

    ASSIGN  shift, and go to state 133


State 111

    9 var_list2: var_list2 ',' IDF '[' INTCST ']' •

    $default  reduce using rule 9 (var_list2)


State 112

   11 const_declaration: IDF ':' type '=' constant_value •

    $default  reduce using rule 11 (const_declaration)


State 113

   30 expression: '(' expression ')' •

    $default  reduce using rule 30 (expression)


State 114

   52 condition_comp: '(' condition ')' •

    $default  reduce using rule 52 (condition_comp)


State 115

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   48 condition_comp: expression LE expression •

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99

    $default  reduce using rule 48 (condition_comp)


State 116

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   49 condition_comp: expression GE expression •

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99

    $default  reduce using rule 49 (condition_comp)


State 117

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   50 condition_comp: expression EQ expression •

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99

    $default  reduce using rule 50 (condition_comp)


State 118

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   51 condition_comp: expression NEQ expression •

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99

    $default  reduce using rule 51 (condition_comp)


State 119

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   46 condition_comp: expression '<' expression •

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99

    $default  reduce using rule 46 (condition_comp)


State 120

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   47 condition_comp: expression '>' expression •

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99

    $default  reduce using rule 47 (condition_comp)


State 121

   26 expression: expression • '+' expression
   26           | expression '+' expression •
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99

    $default  reduce using rule 26 (expression)


State 122

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   27           | expression '-' expression •
   28           | expression • '*' expression
   29           | expression • '/' expression

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99

    $default  reduce using rule 27 (expression)


State 123

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   28           | expression '*' expression •
   29           | expression • '/' expression

    $default  reduce using rule 28 (expression)


State 124

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   29           | expression '/' expression •

    $default  reduce using rule 29 (expression)


State 125

   35 conditional: IF '(' condition ')' THEN • block ELSE block
   36            | IF '(' condition ')' THEN • block

    '{'  shift, and go to state 12

    block  go to state 134


State 126

   40 condition_or: condition_or OR condition_and •
   42 condition_and: condition_and • AND condition_not

    AND  shift, and go to state 102

    $default  reduce using rule 40 (condition_or)


State 127

   42 condition_and: condition_and AND condition_not •

    $default  reduce using rule 42 (condition_and)


State 128

   37 loop: DO block WHILE '(' condition • ')' ';'

    ')'  shift, and go to state 135


State 129

   38 forstatement: FOR IDF FROM expression TO • expression STEP expression block

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 136
    constant_value  go to state 70


State 130

   56 ioparam: IDF '[' INTCST • ']'

    ']'  shift, and go to state 137


State 131

   57 ioparam: IDF '[' IDF • ']'

    ']'  shift, and go to state 138


State 132

   24 assignment: IDF '[' INTCST ']' ASSIGN • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 139
    constant_value  go to state 70


State 133

   25 assignment: IDF '[' IDF ']' ASSIGN • expression

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 140
    constant_value  go to state 70


State 134

   35 conditional: IF '(' condition ')' THEN block • ELSE block
   36            | IF '(' condition ')' THEN block •

    ELSE  shift, and go to state 141

    $default  reduce using rule 36 (conditional)


State 135

   37 loop: DO block WHILE '(' condition ')' • ';'

    ';'  shift, and go to state 142


State 136

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   38 forstatement: FOR IDF FROM expression TO expression • STEP expression block

    STEP  shift, and go to state 143
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99


State 137

   56 ioparam: IDF '[' INTCST ']' •

    $default  reduce using rule 56 (ioparam)


State 138

   57 ioparam: IDF '[' IDF ']' •

    $default  reduce using rule 57 (ioparam)


State 139

   24 assignment: IDF '[' INTCST ']' ASSIGN expression •
   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99

    $default  reduce using rule 24 (assignment)


State 140

   25 assignment: IDF '[' IDF ']' ASSIGN expression •
   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99

    $default  reduce using rule 25 (assignment)


State 141

   35 conditional: IF '(' condition ')' THEN block ELSE • block

    '{'  shift, and go to state 12

    block  go to state 144


State 142

   37 loop: DO block WHILE '(' condition ')' ';' •

    $default  reduce using rule 37 (loop)


State 143

   38 forstatement: FOR IDF FROM expression TO expression STEP • expression block

    INTCST    shift, and go to state 64
    FLOATCST  shift, and go to state 65
    IDF       shift, and go to state 66
    '('       shift, and go to state 81

    expression      go to state 145
    constant_value  go to state 70


State 144

   35 conditional: IF '(' condition ')' THEN block ELSE block •

    $default  reduce using rule 35 (conditional)


State 145

   26 expression: expression • '+' expression
   27           | expression • '-' expression
   28           | expression • '*' expression
   29           | expression • '/' expression
   38 forstatement: FOR IDF FROM expression TO expression STEP expression • block

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '{'  shift, and go to state 12

    block  go to state 146


State 146

   38 forstatement: FOR IDF FROM expression TO expression STEP expression block •

    $default  reduce using rule 38 (forstatement)
